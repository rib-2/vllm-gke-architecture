apiVersion: v1
kind: Namespace
metadata:
  name: dev
  labels:
    name: dev
---
apiVersion: v1
kind: Service
metadata:
  name: vllm-service
  namespace: dev
  labels:
    app.kubernetes.io/name: vllm
    app.kubernetes.io/instance: vllm-0
    app.kubernetes.io/version: 0.3.0
    app.kubernetes.io/component: inference-server
    app.kubernetes.io/part-of: backend
    app.kubernetes.io/managed-by: helm
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
  selector:
    app.kubernetes.io/instance: vllm-0
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vllm-deployment
  namespace: dev
  labels:
    app.kubernetes.io/name: vllm
    app.kubernetes.io/instance: vllm-0
    app.kubernetes.io/version: 0.3.0
    app.kubernetes.io/component: inference-server
    app.kubernetes.io/part-of: backend
    app.kubernetes.io/managed-by: helm
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: vllm-0
  template:
    metadata:
      labels: 
        app.kubernetes.io/name: vllm
        app.kubernetes.io/instance: vllm-0
        app.kubernetes.io/version: 0.3.0
        app.kubernetes.io/component: inference-server
        app.kubernetes.io/part-of: backend
        app.kubernetes.io/managed-by: helm
    spec:
      containers:
      - name: vllm-pod
        image: vllm/vllm-openai
        args: ["--model", "HuggingFaceH4/zephyr-7b-beta", "--tensor-parallel-size", "1", "--dtype", "float16", "--enforce-eager", "--disable-log-requests"]
        resources:
          limits:
            nvidia.com/gpu: 1
        ports:
          - containerPort: 8000
        volumeMounts:
        - name: dshm 
          mountPath: "/dev/shm"
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
      nodeSelector:
        cloud.google.com/gke-accelerator: nvidia-l4
      volumes:
      - name: dshm 
        emptyDir:
          medium: Memory
